
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import math
import os

TOKEN = os.getenv("BOT_TOKEN")

systems = {
    '–ü–æ–ª': {
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç 2 (–ó–≤—É–∫–æ–∏–∑–æ–ª –§–ª–æ—Ä)': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 6500},
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç 1 (–¢–ó–ò)': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 8900},
        '–ü—Ä–æ—Ñ–∏ –ü—Ä–µ–º–∏—É–º': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 11500}
    },
    '–°—Ç–µ–Ω—ã': {
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –ë–∞–∑–æ–≤–∞—è': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 6500},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ü': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 8900},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ú1': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 11500}
    },
    '–ü–æ—Ç–æ–ª–æ–∫': {
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –ë–∞–∑–æ–≤–∞—è': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 6500},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ü': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 8900},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ú1': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 11500}
    },
    '–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∏': {
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –ë–∞–∑–æ–≤–∞—è': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 6500},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ü': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 8900},
        '–ö–∞—Ä–∫–∞—Å–Ω–∞—è –°—Ç–∞–Ω–¥–∞—Ä—Ç –ú1': {'–ø–æ–∫—Ä—ã—Ç–∏–µ': 3.0, '—Ü–µ–Ω–∞': 11500}
    }
}

contacts_text = (
    "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (909) 185-63-06\n"
    "üåê –°–∞–π—Ç: [tihiydom72](https://vk.link/tihiydom72)"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [['–ü–æ–ª', '–°—Ç–µ–Ω—ã'], ['–ü–æ—Ç–æ–ª–æ–∫', '–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∏'], ['–ö–æ–Ω—Ç–∞–∫—Ç—ã']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏ ¬´–¢–∏—Ö–∏–π –î–æ–º¬ª.\n"
        "–í—ã–±–µ—Ä–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞:",
        reply_markup=reply_markup
    )

async def choose_surface(update: Update, context: ContextTypes.DEFAULT_TYPE):
    surface = update.message.text
    if surface in systems:
        context.user_data['surface'] = surface
        options = list(systems[surface].keys())
        keyboard = [[name] for name in options]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ —Å–∏—Å—Ç–µ–º—É:", reply_markup=reply_markup)
    elif surface == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(contacts_text, parse_mode="Markdown")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π.")

async def choose_system(update: Update, context: ContextTypes.DEFAULT_TYPE):
    system = update.message.text
    surface = context.user_data.get('surface')
    if surface and system in systems.get(surface, {}):
        context.user_data['system'] = system
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –≤ –º–µ—Ç—Ä–∞—Ö: –¥–ª–∏–Ω–∞ —à–∏—Ä–∏–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 5.5 3.2)")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å–∏—Å—Ç–µ–º—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.")

async def handle_dimensions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    surface = context.user_data.get('surface')
    system = context.user_data.get('system')
    text = update.message.text.strip()

    try:
        length, width = map(float, text.replace(",", ".").split())
        area = length * width
        sys_data = systems[surface][system]
        packs = math.ceil(area / sys_data['–ø–æ–∫—Ä—ã—Ç–∏–µ'])
        cost = packs * sys_data['—Ü–µ–Ω–∞']

        await update.message.reply_text(
            f"üìê –ü–ª–æ—â–∞–¥—å: {area:.2f} –º¬≤\n"
            f"üß± –°–∏—Å—Ç–µ–º–∞: {system}\n"
            f"üì¶ –ö–æ–º–ø–ª–µ–∫—Ç–æ–≤ –Ω—É–∂–Ω–æ: {packs}\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {cost} ‚ÇΩ\n\n"
            f"{contacts_text}",
            parse_mode="Markdown"
        )
        context.user_data.clear()
    except Exception:
        await update.message.reply_text("–û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: 6 4")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.Regex("^(–ü–æ–ª|–°—Ç–µ–Ω—ã|–ü–æ—Ç–æ–ª–æ–∫|–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∏|–ö–æ–Ω—Ç–∞–∫—Ç—ã)$"), choose_surface))
app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ö–∞—Ä–∫–∞—Å–Ω–∞—è|–°—Ç–∞–Ω–¥–∞—Ä—Ç|–ü—Ä–æ—Ñ–∏|–ó–≤—É–∫–æ–∏–∑–æ–ª|–¢–ó–ò)"), choose_system))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_dimensions))

app.run_polling()
